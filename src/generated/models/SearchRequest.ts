/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SearchFilters } from './SearchFilters';
import {
    SearchFiltersFromJSON,
    SearchFiltersFromJSONTyped,
    SearchFiltersToJSON,
    SearchFiltersToJSONTyped,
} from './SearchFilters';
import type { SearchConfig } from './SearchConfig';
import {
    SearchConfigFromJSON,
    SearchConfigFromJSONTyped,
    SearchConfigToJSON,
    SearchConfigToJSONTyped,
} from './SearchConfig';

/**
 * 
 * @export
 * @interface SearchRequest
 */
export interface SearchRequest {
    /**
     * 
     * @type {string}
     * @memberof SearchRequest
     */
    query?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SearchRequest
     */
    image_url?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SearchRequest
     */
    base64_image?: string | null;
    /**
     * 
     * @type {number}
     * @memberof SearchRequest
     */
    limit?: number | null;
    /**
     * 
     * @type {SearchFilters}
     * @memberof SearchRequest
     */
    filters?: SearchFilters;
    /**
     * 
     * @type {SearchConfig}
     * @memberof SearchRequest
     */
    config?: SearchConfig;
    /**
     * 
     * @type {string}
     * @memberof SearchRequest
     */
    context?: string | null;
}

/**
 * Check if a given object implements the SearchRequest interface.
 */
export function instanceOfSearchRequest(value: object): value is SearchRequest {
    return true;
}

export function SearchRequestFromJSON(json: any): SearchRequest {
    return SearchRequestFromJSONTyped(json, false);
}

export function SearchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'query': json['query'] == null ? undefined : json['query'],
        'image_url': json['image_url'] == null ? undefined : json['image_url'],
        'base64_image': json['base64_image'] == null ? undefined : json['base64_image'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'filters': json['filters'] == null ? undefined : SearchFiltersFromJSON(json['filters']),
        'config': json['config'] == null ? undefined : SearchConfigFromJSON(json['config']),
        'context': json['context'] == null ? undefined : json['context'],
    };
}

export function SearchRequestToJSON(json: any): SearchRequest {
    return SearchRequestToJSONTyped(json, false);
}

export function SearchRequestToJSONTyped(value?: SearchRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'query': value['query'],
        'image_url': value['image_url'],
        'base64_image': value['base64_image'],
        'limit': value['limit'],
        'filters': SearchFiltersToJSON(value['filters']),
        'config': SearchConfigToJSON(value['config']),
        'context': value['context'],
    };
}

