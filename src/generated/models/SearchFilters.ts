/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AvailabilityStatus } from './AvailabilityStatus';
import {
    AvailabilityStatusFromJSON,
    AvailabilityStatusFromJSONTyped,
    AvailabilityStatusToJSON,
    AvailabilityStatusToJSONTyped,
} from './AvailabilityStatus';
import type { SearchFilterPrice } from './SearchFilterPrice';
import {
    SearchFilterPriceFromJSON,
    SearchFilterPriceFromJSONTyped,
    SearchFilterPriceToJSON,
    SearchFilterPriceToJSONTyped,
} from './SearchFilterPrice';

/**
 * 
 * @export
 * @interface SearchFilters
 */
export interface SearchFilters {
    /**
     * 
     * @type {Array<string>}
     * @memberof SearchFilters
     */
    brand_ids?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof SearchFilters
     */
    gender?: SearchFiltersGenderEnum | null;
    /**
     * 
     * @type {SearchFilterPrice}
     * @memberof SearchFilters
     */
    price?: SearchFilterPrice | null;
    /**
     * 
     * @type {Array<AvailabilityStatus>}
     * @memberof SearchFilters
     */
    availability?: Array<AvailabilityStatus> | null;
}


/**
 * @export
 */
export const SearchFiltersGenderEnum = {
    male: 'male',
    female: 'female',
    unisex: 'unisex'
} as const;
export type SearchFiltersGenderEnum = typeof SearchFiltersGenderEnum[keyof typeof SearchFiltersGenderEnum];


/**
 * Check if a given object implements the SearchFilters interface.
 */
export function instanceOfSearchFilters(value: object): value is SearchFilters {
    return true;
}

export function SearchFiltersFromJSON(json: any): SearchFilters {
    return SearchFiltersFromJSONTyped(json, false);
}

export function SearchFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchFilters {
    if (json == null) {
        return json;
    }
    return {
        
        'brand_ids': json['brand_ids'] == null ? undefined : json['brand_ids'],
        'gender': json['gender'] == null ? undefined : json['gender'],
        'price': json['price'] == null ? undefined : SearchFilterPriceFromJSON(json['price']),
        'availability': json['availability'] == null ? undefined : ((json['availability'] as Array<any>).map(AvailabilityStatusFromJSON)),
    };
}

export function SearchFiltersToJSON(json: any): SearchFilters {
    return SearchFiltersToJSONTyped(json, false);
}

export function SearchFiltersToJSONTyped(value?: SearchFilters | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'brand_ids': value['brand_ids'],
        'gender': value['gender'],
        'price': SearchFilterPriceToJSON(value['price']),
        'availability': value['availability'] == null ? undefined : ((value['availability'] as Array<any>).map(AvailabilityStatusToJSON)),
    };
}

