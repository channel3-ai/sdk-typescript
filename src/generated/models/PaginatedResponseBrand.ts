/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Brand } from './Brand';
import {
    BrandFromJSON,
    BrandFromJSONTyped,
    BrandToJSON,
    BrandToJSONTyped,
} from './Brand';
import type { PaginationMeta } from './PaginationMeta';
import {
    PaginationMetaFromJSON,
    PaginationMetaFromJSONTyped,
    PaginationMetaToJSON,
    PaginationMetaToJSONTyped,
} from './PaginationMeta';

/**
 * 
 * @export
 * @interface PaginatedResponseBrand
 */
export interface PaginatedResponseBrand {
    /**
     * 
     * @type {Array<Brand>}
     * @memberof PaginatedResponseBrand
     */
    items: Array<Brand>;
    /**
     * 
     * @type {PaginationMeta}
     * @memberof PaginatedResponseBrand
     */
    pagination: PaginationMeta;
}

/**
 * Check if a given object implements the PaginatedResponseBrand interface.
 */
export function instanceOfPaginatedResponseBrand(value: object): value is PaginatedResponseBrand {
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('pagination' in value) || value['pagination'] === undefined) return false;
    return true;
}

export function PaginatedResponseBrandFromJSON(json: any): PaginatedResponseBrand {
    return PaginatedResponseBrandFromJSONTyped(json, false);
}

export function PaginatedResponseBrandFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedResponseBrand {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(BrandFromJSON)),
        'pagination': PaginationMetaFromJSON(json['pagination']),
    };
}

export function PaginatedResponseBrandToJSON(json: any): PaginatedResponseBrand {
    return PaginatedResponseBrandToJSONTyped(json, false);
}

export function PaginatedResponseBrandToJSONTyped(value?: PaginatedResponseBrand | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(BrandToJSON)),
        'pagination': PaginationMetaToJSON(value['pagination']),
    };
}

