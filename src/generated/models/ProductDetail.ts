/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Variant } from './Variant';
import {
    VariantFromJSON,
    VariantFromJSONTyped,
    VariantToJSON,
    VariantToJSONTyped,
} from './Variant';
import type { AvailabilityStatus } from './AvailabilityStatus';
import {
    AvailabilityStatusFromJSON,
    AvailabilityStatusFromJSONTyped,
    AvailabilityStatusToJSON,
    AvailabilityStatusToJSONTyped,
} from './AvailabilityStatus';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
    PriceToJSONTyped,
} from './Price';

/**
 * A product with detailed information
 * @export
 * @interface ProductDetail
 */
export interface ProductDetail {
    /**
     * 
     * @type {string}
     * @memberof ProductDetail
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ProductDetail
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof ProductDetail
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ProductDetail
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductDetail
     */
    brand_id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductDetail
     */
    brand_name?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProductDetail
     */
    image_urls?: Array<string> | null;
    /**
     * 
     * @type {Price}
     * @memberof ProductDetail
     */
    price: Price;
    /**
     * 
     * @type {AvailabilityStatus}
     * @memberof ProductDetail
     */
    availability: AvailabilityStatus;
    /**
     * 
     * @type {string}
     * @memberof ProductDetail
     */
    gender?: ProductDetailGenderEnum | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProductDetail
     */
    materials?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProductDetail
     */
    key_features?: Array<string> | null;
    /**
     * 
     * @type {Array<Variant>}
     * @memberof ProductDetail
     */
    variants?: Array<Variant>;
}


/**
 * @export
 */
export const ProductDetailGenderEnum = {
    male: 'male',
    female: 'female',
    unisex: 'unisex'
} as const;
export type ProductDetailGenderEnum = typeof ProductDetailGenderEnum[keyof typeof ProductDetailGenderEnum];


/**
 * Check if a given object implements the ProductDetail interface.
 */
export function instanceOfProductDetail(value: object): value is ProductDetail {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('availability' in value) || value['availability'] === undefined) return false;
    return true;
}

export function ProductDetailFromJSON(json: any): ProductDetail {
    return ProductDetailFromJSONTyped(json, false);
}

export function ProductDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'url': json['url'],
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'brand_id': json['brand_id'] == null ? undefined : json['brand_id'],
        'brand_name': json['brand_name'] == null ? undefined : json['brand_name'],
        'image_urls': json['image_urls'] == null ? undefined : json['image_urls'],
        'price': PriceFromJSON(json['price']),
        'availability': AvailabilityStatusFromJSON(json['availability']),
        'gender': json['gender'] == null ? undefined : json['gender'],
        'materials': json['materials'] == null ? undefined : json['materials'],
        'key_features': json['key_features'] == null ? undefined : json['key_features'],
        'variants': json['variants'] == null ? undefined : ((json['variants'] as Array<any>).map(VariantFromJSON)),
    };
}

export function ProductDetailToJSON(json: any): ProductDetail {
    return ProductDetailToJSONTyped(json, false);
}

export function ProductDetailToJSONTyped(value?: ProductDetail | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'url': value['url'],
        'title': value['title'],
        'description': value['description'],
        'brand_id': value['brand_id'],
        'brand_name': value['brand_name'],
        'image_urls': value['image_urls'],
        'price': PriceToJSON(value['price']),
        'availability': AvailabilityStatusToJSON(value['availability']),
        'gender': value['gender'],
        'materials': value['materials'],
        'key_features': value['key_features'],
        'variants': value['variants'] == null ? undefined : ((value['variants'] as Array<any>).map(VariantToJSON)),
    };
}

